# SSL Certificate (Self-signed for testing)
commands:
  01_create_ssl_cert:
    command: |
      mkdir -p /etc/ssl/private /etc/ssl/certs
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -keyout /etc/ssl/private/server.key \
        -out /etc/ssl/certs/server.crt \
        -subj "/C=IN/ST=State/L=City/O=Org/CN=*.elasticbeanstalk.com"
      chmod 600 /etc/ssl/private/server.key
      chmod 644 /etc/ssl/certs/server.crt
    ignoreErrors: true

# Security Group Rule
Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

# Nginx Configuration Files
files:
  # HTTP to HTTPS Redirect
  /etc/nginx/conf.d/elasticbeanstalk/ssl_redirect.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
          listen 80 default_server;
          return 301 https://$host$request_uri;
      }
  
  # HTTPS Server Block
  /etc/nginx/conf.d/elasticbeanstalk/ssl.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
          listen 443 ssl default_server;
          server_name _;
          
          ssl_certificate /etc/ssl/certs/server.crt;
          ssl_certificate_key /etc/ssl/private/server.key;
          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers HIGH:!aNULL:!MD5;
          
          location / {
              proxy_pass http://127.0.0.1:8000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto https;
              proxy_set_header X-Forwarded-Port 443;
          }
          
          # Health check endpoint (no redirect)
          location /health {
              proxy_pass http://127.0.0.1:8000/health;
              proxy_set_header Host $host;
          }
      }

# Restart Nginx after configuration
container_commands:
  01_restart_nginx:
    command: "service nginx restart"
    ignoreErrors: true
