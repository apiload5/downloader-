# Complete configuration for Python FastAPI with FFmpeg and yt-dlp
packages:
  yum:
    git: []
    gcc: []
    gcc-c++: []
    make: []
    openssl-devel: []
    libffi-devel: []
    python3-devel: []
    wget: []
    tar: []
    xz: []
    freetype-devel: []
    fontconfig-devel: []
    nasm: []
    yasm-devel: []
    libass-devel: []
    libtheora-devel: []
    libogg-devel: []
    libvorbis-devel: []
    libvpx-devel: []

option_settings:
  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/var/app/current:$PYTHONPATH"
    PYTHONUNBUFFERED: "1"
    PYTHONDONTWRITEBYTECODE: "1"
    FFMPEG_BINARY: "/usr/local/bin/ffmpeg"
    FFPROBE_BINARY: "/usr/local/bin/ffprobe"
    YT_DLP_BINARY: "/usr/local/bin/yt-dlp"
    
  aws:elasticbeanstalk:container:python:
    WSGIPath: "application:application"
    NumProcesses: "1"
    NumThreads: "15"
    
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: "static"
    
  aws:autoscaling:launchconfiguration:
    DisableIMDSv1: true
    RootVolumeType: "gp3"
    RootVolumeSize: "20"
    
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: "enhanced"
    HealthCheckSuccessThreshold: "Ok"
    
  aws:elasticbeanstalk:environment:process:default:
    HealthCheckPath: "/health"
    HealthCheckInterval: "15"
    HealthyThresholdCount: "3"
    UnhealthyThresholdCount: "5"
    Timeout: "60"
    
  aws:elasticbeanstalk:cloudwatch:logs:
    StreamLogs: "true"
    DeleteOnTerminate: "false"
    RetentionInDays: "7"

commands:
  01_update_system:
    command: "yum update -y"
    ignoreErrors: true
    
  02_install_epel:
    command: "amazon-linux-extras install epel -y"
    ignoreErrors: true
    
  03_upgrade_pip:
    command: "/var/app/venv/*/bin/pip install --upgrade pip wheel setuptools"
    ignoreErrors: true
    
  04_download_ffmpeg:
    command: |
      echo "=== Installing FFmpeg ==="
      cd /tmp
      rm -rf ffmpeg-*
      wget -q --timeout=60 https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
      if [ $? -eq 0 ]; then
        tar -xf ffmpeg-release-amd64-static.tar.xz
        find . -name "ffmpeg-*-amd64-static" -type d -exec cp {}/ffmpeg /usr/local/bin/ \;
        find . -name "ffmpeg-*-amd64-static" -type d -exec cp {}/ffprobe /usr/local/bin/ \;
        chmod +x /usr/local/bin/ffmpeg
        chmod +x /usr/local/bin/ffprobe
        ln -sf /usr/local/bin/ffmpeg /usr/bin/ffmpeg
        ln -sf /usr/local/bin/ffprobe /usr/bin/ffprobe
        echo "FFmpeg installed successfully"
        /usr/local/bin/ffmpeg -version | head -1
      else
        echo "FFmpeg download failed"
        exit 1
      fi
    ignoreErrors: false
    
  05_download_yt_dlp:
    command: |
      echo "=== Installing yt-dlp ==="
      cd /tmp
      wget -q --timeout=60 https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -O /usr/local/bin/yt-dlp
      if [ $? -eq 0 ]; then
        chmod +x /usr/local/bin/yt-dlp
        ln -sf /usr/local/bin/yt-dlp /usr/bin/yt-dlp
        echo "yt-dlp installed successfully"
        /usr/local/bin/yt-dlp --version
      else
        echo "yt-dlp download failed"
        exit 1
      fi
    ignoreErrors: false
    
  06_set_environment:
    command: |
      echo 'export PATH="/usr/local/bin:$PATH"' >> /etc/environment
      echo 'export FFMPEG_BINARY="/usr/local/bin/ffmpeg"' >> /etc/environment
      echo 'export FFPROBE_BINARY="/usr/local/bin/ffprobe"' >> /etc/environment
      echo 'export YT_DLP_BINARY="/usr/local/bin/yt-dlp"' >> /etc/environment
    ignoreErrors: true

container_commands:
  01_create_directories:
    command: |
      echo "=== Creating application directories ==="
      mkdir -p /var/app/current/downloads
      mkdir -p /var/app/current/temp
      mkdir -p /var/app/current/static
      mkdir -p /var/log/savemedia
      chmod 755 /var/app/current/downloads
      chmod 755 /var/app/current/temp
      chmod 755 /var/app/current/static
      chmod 755 /var/log/savemedia
      chown webapp:webapp /var/app/current/downloads
      chown webapp:webapp /var/app/current/temp
      chown webapp:webapp /var/log/savemedia
    ignoreErrors: true
    
  02_verify_installation:
    command: |
      echo "=== Final Verification ==="
      echo "Python version:"
      python3 --version
      echo "FFmpeg location and version:"
      which ffmpeg
      ffmpeg -version 2>/dev/null | head -1 || echo "FFmpeg verification failed"
      echo "FFprobe location and version:"
      which ffprobe
      ffprobe -version 2>/dev/null | head -1 || echo "FFprobe verification failed"
      echo "yt-dlp location and version:"
      which yt-dlp
      yt-dlp --version 2>/dev/null || echo "yt-dlp verification failed"
      echo "=== Verification Complete ==="
    ignoreErrors: true
    
  03_set_permissions:
    command: |
      echo "=== Setting final permissions ==="
      chmod +x /usr/local/bin/ffmpeg 2>/dev/null || true
      chmod +x /usr/local/bin/ffprobe 2>/dev/null || true
      chmod +x /usr/local/bin/yt-dlp 2>/dev/null || true
      
      # Ensure binaries are accessible
      ls -la /usr/local/bin/ffmpeg 2>/dev/null || echo "FFmpeg not found"
      ls -la /usr/local/bin/ffprobe 2>/dev/null || echo "FFprobe not found"  
      ls -la /usr/local/bin/yt-dlp 2>/dev/null || echo "yt-dlp not found"
    ignoreErrors: true

files:
  "/etc/httpd/conf.d/wsgi_custom.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Custom WSGI configuration for FastAPI
      WSGIApplicationGroup %{GLOBAL}
      WSGIPassAuthorization On
      WSGIScriptReloading On
      
  "/opt/elasticbeanstalk/tasks/taillogs.d/savemedia.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/savemedia/*.log
      /var/app/current/*.log
      
  "/etc/logrotate.d/savemedia":
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/savemedia/*.log {
          daily
          missingok
          rotate 7
          compress
          notifempty
          create 0644 webapp webapp
      }
      
  "/var/app/current/test_installation.py":
    mode: "000755"
    owner: webapp
    group: webapp
    content: |
      #!/usr/bin/env python3
      import subprocess
      import sys
      import os
      
      def test_tool(name, path, version_arg="--version"):
          try:
              result = subprocess.run([path, version_arg], 
                                    capture_output=True, text=True, timeout=10)
              if result.returncode == 0:
                  print(f"‚úÖ {name}: OK - {result.stdout.split()[0] if result.stdout else 'Unknown version'}")
                  return True
              else:
                  print(f"‚ùå {name}: FAILED - {result.stderr}")
                  return False
          except Exception as e:
              print(f"‚ùå {name}: ERROR - {str(e)}")
              return False
      
      if __name__ == "__main__":
          print("=== SaveMedia Installation Test ===")
          print(f"Python: {sys.version}")
          
          ffmpeg_ok = test_tool("FFmpeg", "/usr/local/bin/ffmpeg", "-version")
          ffprobe_ok = test_tool("FFprobe", "/usr/local/bin/ffprobe", "-version") 
          ytdlp_ok = test_tool("yt-dlp", "/usr/local/bin/yt-dlp", "--version")
          
          if ffmpeg_ok and ffprobe_ok and ytdlp_ok:
              print("üéâ All tools installed successfully!")
              sys.exit(0)
          else:
              print("‚ö†Ô∏è  Some tools failed to install")
              sys.exit(1)
